From rik0 at mail.berlios.de  Mon Dec 25 21:33:48 2006
From: rik0 at mail.berlios.de (rik0 at mail.berlios.de)
Date: Mon, 25 Dec 2006 21:33:48 +0100
Subject: [Pylognotifier-svn] r13 - trunk/LogNotifier
Message-ID: <200612252033.kBPKXmM9032296@sheep.berlios.de>

Author: rik0
Date: 2006-12-25 21:33:33 +0100 (Mon, 25 Dec 2006)
New Revision: 13

Added:
   trunk/LogNotifier/Environment.py
   trunk/LogNotifier/LogNotifier.tmproj
Removed:
   trunk/LogNotifier/CommonDefinitions.py
Modified:
   trunk/LogNotifier/LogNotifier.py
   trunk/LogNotifier/LogNotifierAppDelegate.py
   trunk/LogNotifier/PreferenceBackend.py
   trunk/LogNotifier/PreferenceModel.py
Log:
Added Environment, removed CommonDefinitions.

Deleted: trunk/LogNotifier/CommonDefinitions.py
===================================================================
--- trunk/LogNotifier/CommonDefinitions.py	2006-11-08 14:31:56 UTC (rev 12)
+++ trunk/LogNotifier/CommonDefinitions.py	2006-12-25 20:33:33 UTC (rev 13)
@@ -1,9 +0,0 @@
-try:
-    import Foundation
-    from Foundation import NSLog
-    def Log(*args): NSLog(*args)
-    
-except ImportError:
-    import sys
-    def Log(*args): print >> sys.stderr, args
-    
\ No newline at end of file

Added: trunk/LogNotifier/Environment.py
===================================================================
--- trunk/LogNotifier/Environment.py	2006-11-08 14:31:56 UTC (rev 12)
+++ trunk/LogNotifier/Environment.py	2006-12-25 20:33:33 UTC (rev 13)
@@ -0,0 +1,45 @@
+import os
+import sys
+
+#def _set_darwin():
+#    pass
+#
+#def _log_factory(system):
+#    try:
+#        import Foundation
+#        import AppKit
+#        def Log(*args): 
+#            from Foundation import NSLog
+#            
+#        
+#    except ImportError:
+#        
+#        has_cocoa = False
+
+class DarwinEnvironment(type):
+    try:
+        import Foundation
+        import AppKit
+        import objc
+        has_cocoa = True
+        def Log(cls, *args):
+            from Foundation import NSLog
+            NSLog(*args)
+    except ImportError:
+        has_cocoa = False
+        def Log(*args): 
+            print >> sys.stderr, args
+    try:
+        import Growl
+        has_growl = True
+    except ImportError:
+        has_growl = False
+    
+        
+    
+class Environment(object):
+    system = os.uname()
+    __metaclass__ = eval('%sEnvironment' % system[0].capitalize())
+
+              
+            
\ No newline at end of file

Modified: trunk/LogNotifier/LogNotifier.py
===================================================================
--- trunk/LogNotifier/LogNotifier.py	2006-11-08 14:31:56 UTC (rev 12)
+++ trunk/LogNotifier/LogNotifier.py	2006-12-25 20:33:33 UTC (rev 13)
@@ -4,7 +4,7 @@
 #
 
 from PyObjCTools import NibClassBuilder, AppHelper
-from Foundation import NSBundle, NSLog, NSUserDefaults
+from Foundation import NSBundle, NSUserDefaults
 
 info = NSBundle.mainBundle().infoDictionary()[u'PyObjCXcode']
 

Added: trunk/LogNotifier/LogNotifier.tmproj
===================================================================
--- trunk/LogNotifier/LogNotifier.tmproj	2006-11-08 14:31:56 UTC (rev 12)
+++ trunk/LogNotifier/LogNotifier.tmproj	2006-12-25 20:33:33 UTC (rev 13)
@@ -0,0 +1,223 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>currentDocument</key>
+	<string>PreferenceModel.py</string>
+	<key>documents</key>
+	<array>
+		<dict>
+			<key>filename</key>
+			<string>Alarm.py</string>
+			<key>lastUsed</key>
+			<date>2006-12-25T20:18:01Z</date>
+		</dict>
+		<dict>
+			<key>filename</key>
+			<string>CommonDefinitions.py</string>
+			<key>lastUsed</key>
+			<date>2006-12-25T20:17:29Z</date>
+		</dict>
+		<dict>
+			<key>filename</key>
+			<string>Environment.py</string>
+			<key>lastUsed</key>
+			<date>2006-12-25T20:18:39Z</date>
+		</dict>
+		<dict>
+			<key>filename</key>
+			<string>FileMonitor.py</string>
+			<key>lastUsed</key>
+			<date>2006-12-25T20:18:50Z</date>
+		</dict>
+		<dict>
+			<key>filename</key>
+			<string>FileObserver.py</string>
+			<key>lastUsed</key>
+			<date>2006-12-25T20:17:25Z</date>
+		</dict>
+		<dict>
+			<key>filename</key>
+			<string>LogNotifier.py</string>
+			<key>lastUsed</key>
+			<date>2006-12-25T20:17:16Z</date>
+		</dict>
+		<dict>
+			<key>filename</key>
+			<string>LogNotifierAppDelegate.py</string>
+			<key>lastUsed</key>
+			<date>2006-12-25T20:21:55Z</date>
+		</dict>
+		<dict>
+			<key>filename</key>
+			<string>Notifier.py</string>
+		</dict>
+		<dict>
+			<key>filename</key>
+			<string>PreferenceBackend.py</string>
+			<key>lastUsed</key>
+			<date>2006-12-25T20:22:13Z</date>
+		</dict>
+		<dict>
+			<key>filename</key>
+			<string>PreferenceModel.py</string>
+			<key>lastUsed</key>
+			<date>2006-12-25T20:26:38Z</date>
+			<key>selected</key>
+			<true/>
+		</dict>
+		<dict>
+			<key>filename</key>
+			<string>setup.py</string>
+		</dict>
+		<dict>
+			<key>filename</key>
+			<string>SingletonDecorator.py</string>
+		</dict>
+		<dict>
+			<key>expanded</key>
+			<true/>
+			<key>name</key>
+			<string>tests</string>
+			<key>regexFolderFilter</key>
+			<string>!.*/(\.[^/]*|CVS|_darcs|_MTN|\{arch\}|blib|.*~\.nib|.*\.(framework|app|pbproj|pbxproj|xcode(proj)?|bundle))$</string>
+			<key>sourceDirectory</key>
+			<string>tests</string>
+		</dict>
+	</array>
+	<key>fileHierarchyDrawerWidth</key>
+	<integer>200</integer>
+	<key>metaData</key>
+	<dict>
+		<key>Alarm.py</key>
+		<dict>
+			<key>caret</key>
+			<dict>
+				<key>column</key>
+				<integer>6</integer>
+				<key>line</key>
+				<integer>2</integer>
+			</dict>
+			<key>columnSelection</key>
+			<false/>
+			<key>firstVisibleColumn</key>
+			<integer>0</integer>
+			<key>firstVisibleLine</key>
+			<integer>0</integer>
+			<key>selectFrom</key>
+			<dict>
+				<key>column</key>
+				<integer>3</integer>
+				<key>line</key>
+				<integer>2</integer>
+			</dict>
+			<key>selectTo</key>
+			<dict>
+				<key>column</key>
+				<integer>6</integer>
+				<key>line</key>
+				<integer>2</integer>
+			</dict>
+		</dict>
+		<key>Environment.py</key>
+		<dict>
+			<key>caret</key>
+			<dict>
+				<key>column</key>
+				<integer>19</integer>
+				<key>line</key>
+				<integer>22</integer>
+			</dict>
+			<key>firstVisibleColumn</key>
+			<integer>0</integer>
+			<key>firstVisibleLine</key>
+			<integer>0</integer>
+		</dict>
+		<key>FileMonitor.py</key>
+		<dict>
+			<key>caret</key>
+			<dict>
+				<key>column</key>
+				<integer>6</integer>
+				<key>line</key>
+				<integer>2</integer>
+			</dict>
+			<key>firstVisibleColumn</key>
+			<integer>0</integer>
+			<key>firstVisibleLine</key>
+			<integer>14</integer>
+		</dict>
+		<key>LogNotifierAppDelegate.py</key>
+		<dict>
+			<key>caret</key>
+			<dict>
+				<key>column</key>
+				<integer>18</integer>
+				<key>line</key>
+				<integer>13</integer>
+			</dict>
+			<key>firstVisibleColumn</key>
+			<integer>0</integer>
+			<key>firstVisibleLine</key>
+			<integer>3</integer>
+		</dict>
+		<key>PreferenceBackend.py</key>
+		<dict>
+			<key>caret</key>
+			<dict>
+				<key>column</key>
+				<integer>6</integer>
+				<key>line</key>
+				<integer>2</integer>
+			</dict>
+			<key>columnSelection</key>
+			<false/>
+			<key>firstVisibleColumn</key>
+			<integer>0</integer>
+			<key>firstVisibleLine</key>
+			<integer>0</integer>
+			<key>selectFrom</key>
+			<dict>
+				<key>column</key>
+				<integer>3</integer>
+				<key>line</key>
+				<integer>2</integer>
+			</dict>
+			<key>selectTo</key>
+			<dict>
+				<key>column</key>
+				<integer>6</integer>
+				<key>line</key>
+				<integer>2</integer>
+			</dict>
+		</dict>
+		<key>PreferenceModel.py</key>
+		<dict>
+			<key>caret</key>
+			<dict>
+				<key>column</key>
+				<integer>0</integer>
+				<key>line</key>
+				<integer>8</integer>
+			</dict>
+			<key>firstVisibleColumn</key>
+			<integer>0</integer>
+			<key>firstVisibleLine</key>
+			<integer>0</integer>
+		</dict>
+	</dict>
+	<key>openDocuments</key>
+	<array>
+		<string>Alarm.py</string>
+		<string>Environment.py</string>
+		<string>FileMonitor.py</string>
+		<string>LogNotifierAppDelegate.py</string>
+		<string>PreferenceBackend.py</string>
+		<string>PreferenceModel.py</string>
+	</array>
+	<key>showFileHierarchyDrawer</key>
+	<true/>
+	<key>windowFrame</key>
+	<string>{{278, 207}, {1151, 742}}</string>
+</dict>
+</plist>

Modified: trunk/LogNotifier/LogNotifierAppDelegate.py
===================================================================
--- trunk/LogNotifier/LogNotifierAppDelegate.py	2006-11-08 14:31:56 UTC (rev 12)
+++ trunk/LogNotifier/LogNotifierAppDelegate.py	2006-12-25 20:33:33 UTC (rev 13)
@@ -11,6 +11,7 @@
 from Alarm import registerAlarm
 from FileObserver import fileObserverFactory
 from Notifier import notifierFactory
+import Environment
 
 PREFERENCES_CHANGED = 'RKLN_PreferencesChanged'
 
@@ -47,7 +48,10 @@
         
 # Warning: we have to verify if this is implementation dependent        
 class PreferenceModel(PreferenceModel, RKLNTableViewDataSource):
-    '''This way we are mixin in our Cocoa specific methods'''
+    '''PreferenceModel is mixed in with RKLNTableViewDataSource.
+    
+    This could be considered kind of Python black magic.
+    '''
     pass
     
 class NotifierController(NibClassBuilder.AutoBaseClass):

Modified: trunk/LogNotifier/PreferenceBackend.py
===================================================================
--- trunk/LogNotifier/PreferenceBackend.py	2006-11-08 14:31:56 UTC (rev 12)
+++ trunk/LogNotifier/PreferenceBackend.py	2006-12-25 20:33:33 UTC (rev 13)
@@ -6,8 +6,6 @@
 #  Copyright (c) 2006 Enrico Franchi. All rights reserved.
 #
 
-from CommonDefinitions import Log
-
 def preferenceBackendFactory():
     try:
         import Foundation

Modified: trunk/LogNotifier/PreferenceModel.py
===================================================================
--- trunk/LogNotifier/PreferenceModel.py	2006-11-08 14:31:56 UTC (rev 12)
+++ trunk/LogNotifier/PreferenceModel.py	2006-12-25 20:33:33 UTC (rev 13)
@@ -6,7 +6,6 @@
 #  Copyright (c) 2006 Enrico Franchi. All rights reserved.
 #
 
-from CommonDefinitions import Log
 from PreferenceBackend import preferenceBackendFactory
 
 class EntryInfo(dict):



